version: '3'

services:

  alicatesService:
    image: cabama/alicate:lts
    build: alicatesService/.
    command: yarn dev:watch
    networks:
      - hormiguitas
    volumes:
      - ./alicatesService/src:/usr/src/alicates/src
      - ./alicatesService/bin:/usr/src/alicates/bin
      - ./alicatesService/public:/usr/src/alicates/public
    ports:
      - "2222:2222"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  jenkins:
    image: cabama/jenkins:lts
    build: jenkins/.
    user: jenkins
    networks:
      - hormiguitas
    volumes:
      - /root/install/jenkins/data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JENKINS_HOST_HOME: "/data/jenkins"
    ports:
      - "8282:8080"
      - "5000:5000"
      - "50000:50000"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]

  nginx:
    image: cabama/nginx
    build: nginx/.
    ports: 
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/data:/etc/nginx/conf.d
      - ./nginx/data/certbot/conf:/etc/letsencrypt
      - ./nginx/data/certbot/www:/var/www/certbot
    networks: 
      - hormiguitas
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  certbot:
    image: certbot/certbot
    volumes:
      - ./nginx/data/certbot/conf:/etc/letsencrypt
      - ./nginx/data/certbot/www:/var/www/certbot

  portainer:
    image: portainer/portainer
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - hormiguitas

volumes:
  portainer_data:



networks:
  hormiguitas:
